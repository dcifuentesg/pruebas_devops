[1mdiff --git a/frontend/eslint.config.js b/frontend/eslint.config.js[m
[1mindex ec2b712..67ff6a6 100644[m
[1m--- a/frontend/eslint.config.js[m
[1m+++ b/frontend/eslint.config.js[m
[36m@@ -30,4 +30,43 @@[m [mexport default [[m
       ],[m
     },[m
   },[m
[32m+[m[32m  // Configuration for Node.js files (config files)[m
[32m+[m[32m  {[m
[32m+[m[32m    files: ['babel.config.js', '__mocks__/**/*.js'],[m
[32m+[m[32m    languageOptions: {[m
[32m+[m[32m      ecmaVersion: 2020,[m
[32m+[m[32m      globals: globals.node,[m
[32m+[m[32m      parserOptions: {[m
[32m+[m[32m        ecmaVersion: 'latest',[m
[32m+[m[32m        sourceType: 'module',[m
[32m+[m[32m      },[m
[32m+[m[32m    },[m
[32m+[m[32m    rules: {[m
[32m+[m[32m      ...js.configs.recommended.rules,[m
[32m+[m[32m    },[m
[32m+[m[32m  },  // Configuration for test files[m
[32m+[m[32m  {[m
[32m+[m[32m    files: ['**/*.test.{js,jsx}', '**/setupTests.js'],[m
[32m+[m[32m    languageOptions: {[m
[32m+[m[32m      ecmaVersion: 2020,[m
[32m+[m[32m      globals: {[m
[32m+[m[32m        ...globals.browser,[m
[32m+[m[32m        ...globals.jest,[m
[32m+[m[32m        ...globals.node,[m
[32m+[m[32m        global: 'writable', // Explicitly declare global[m
[32m+[m[32m        beforeEach: 'readonly',[m
[32m+[m[32m        afterEach: 'readonly',[m
[32m+[m[32m        beforeAll: 'readonly',[m
[32m+[m[32m        afterAll: 'readonly',[m
[32m+[m[32m      },[m
[32m+[m[32m      parserOptions: {[m
[32m+[m[32m        ecmaVersion: 'latest',[m
[32m+[m[32m        ecmaFeatures: { jsx: true },[m
[32m+[m[32m        sourceType: 'module',[m
[32m+[m[32m      },[m
[32m+[m[32m    },[m
[32m+[m[32m    rules: {[m
[32m+[m[32m      ...js.configs.recommended.rules,[m
[32m+[m[32m    },[m
[32m+[m[32m  },[m
 ][m
[1mdiff --git a/frontend/jest.config.json b/frontend/jest.config.json[m
[1mindex d770f70..17f6e13 100644[m
[1m--- a/frontend/jest.config.json[m
[1m+++ b/frontend/jest.config.json[m
[36m@@ -1,5 +1,4 @@[m
 {[m
[31m-  "preset": "@babel/preset-env",[m
   "testEnvironment": "jsdom",[m
   "setupFilesAfterEnv": ["<rootDir>/src/setupTests.js"],[m
   "moduleNameMapping": {[m
[1mdiff --git a/frontend/src/services/authService.js b/frontend/src/services/authService.js[m
[1mindex 1163ec4..3f1fc78 100644[m
[1m--- a/frontend/src/services/authService.js[m
[1m+++ b/frontend/src/services/authService.js[m
[36m@@ -42,22 +42,14 @@[m [mapi.interceptors.response.use([m
 const authService = {[m
   // Registro de usuario[m
   register: async (userData) => {[m
[31m-    try {[m
[31m-      const response = await api.post('/users/register', userData)[m
[31m-      return response[m
[31m-    } catch (error) {[m
[31m-      throw error[m
[31m-    }[m
[32m+[m[32m    const response = await api.post('/users/register', userData)[m
[32m+[m[32m    return response[m
   },[m
 [m
   // Inicio de sesiÃ³n[m
   login: async (credentials) => {[m
[31m-    try {[m
[31m-      const response = await api.post('/users/login', credentials)[m
[31m-      return response[m
[31m-    } catch (error) {[m
[31m-      throw error[m
[31m-    }[m
[32m+[m[32m    const response = await api.post('/users/login', credentials)[m
[32m+[m[32m    return response[m
   },[m
 [m
   // Logout[m
